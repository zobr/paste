<?php require __DIR__ . '/layout/header.phtml' ?>

<?php
$syntax_default = $container->config->get('paste.syntax_default');
$syntax_list = $container->pasteRepository->getSortedSyntaxList();
?>

<form class="form" action="/" method="post">
  <textarea class="text" name="text" placeholder="Paste your text here..."></textarea>
  <div class="options">
    <div class="option left">
      <button class="mono" type="submit">submit</button>
      <span class="mono desktop hint">ctrl+s</span>
    </div>
    <div class="option right">
      <span class="mono desktop hint">ctrl+p</span>
      <span class="mono desktop">syntax:</span>
      <select class="mono" name="syntax">
        <?php foreach ($syntax_list as $syntax) : ?>
        <?php $selected = ( $syntax_default === $syntax['key'] ) ? 'selected' : '' ?>
        <option value="<?= $syntax['key'] ?>" <?= $selected ?>><?= $syntax['name'] ?></option>
        <?php endforeach; ?>
      </select>
    </div>
  </div>
</form>

<script>
var FORM_TAGS_REGEX = /input|select|textarea/i;
var $window = $(window);
var $form = $('.form');
var $textarea = $form.find('textarea');
var $syntax = $form.find('select[name=syntax]');
var $syntaxDefaultOption = $syntax.find('option').eq(0);

// Swallow backspace keypresses
$window.bind("keydown keypress", function (e) {
  var formTag = FORM_TAGS_REGEX.test(e.target.tagName.toLowerCase());
  if (e.which === 8) {
    if (!formTag || e.target.disabled || e.target.readOnly) {
      e.preventDefault();
    }
  }
});

// Select default syntax when pressing backspace
$syntax.keydown(function (e) {
  if (e.which === 8) {
    $syntaxDefaultOption.prop('selected', true);
    e.preventDefault();
  }
});

// Submit paste when pressing Ctrl+S
$window.keydown(function (e) {
  var ctrl = e.metaKey || e.ctrlKey;
  if (ctrl && e.which === 83 || ctrl && e.which === 13) {
    $form.submit();
    e.preventDefault();
  }
});

// Open the syntax selector when pressing Ctrl+P
$window.keydown(function (e) {
  var ctrl = e.metaKey || e.ctrlKey;
  if (ctrl && e.which === 80) {
    $syntax.focus();
    // var mouseEvent = document.createEvent('MouseEvents');
    // mouseEvent.initMouseEvent('mousedown', true, true, window, 0, 0, 0, 0, 0,
    //   false, false, false, false, 0, null);
    // $syntax[0].dispatchEvent(mouseEvent);
    e.preventDefault();
  }
});

// Add spaces when pressing the tab key
$textarea.keydown(function (e) {
  if (e.which === 9) {
    // get caret position/selection
    var start = this.selectionStart;
    var end = this.selectionEnd;
    var $this = $(this);
    var value = $this.val();
    // set textarea value to: text before caret + tab + text after caret
    $this.val(value.substring(0, start) + '  ' + value.substring(end));
    // put caret at right position again (add one for the tab)
    this.selectionStart = this.selectionEnd = start + 2;
    // prevent the focus lose
    e.preventDefault();
  }
});

// Autofocus the textarea
setTimeout(function () {
  $textarea.focus();
}, 0);
</script>

<?php require __DIR__ . '/layout/footer.phtml' ?>
